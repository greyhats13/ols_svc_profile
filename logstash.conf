input {
  beats {
    port => 5044
  }
}

filter {
  if [agent][type] == "filebeat" and ([message] =~ /"service.name":"filebeat"/ or [message] =~ /"service.name":"ES_ECS"/) {
    drop { }
  }
  if [agent][type] == "filebeat" {
    # Match the log level and JSON content
    grok {
      match => { "message" => "%{WORD:level}:\s+%{TIMESTAMP_ISO8601:timestamp} \| %{GREEDYDATA:json_content}" }
      tag_on_failure => ["_grokparsefailure"]
    }
    
    # Parse the JSON content
    json {
      source => "json_content"
      target => "json_data"
    }
    
    # Add new fields
    mutate {
      add_field => {
        "method" => "%{[json_data][method]}"
        "status_code" => "%{[json_data][status_code]}"
        "path" => "%{[json_data][path]}"
        "latency" => "%{[json_data][latency]}"
      }
    }
    
    # Rename headers
    mutate {
      rename => {
        "[json_data][request][headers]" => "request_headers"
        "[json_data][response][headers]" => "response_headers"
      }
    }
    
    # Remove unnecessary fields
    mutate {
      remove_field => ["json_content", "json_data", "@version", "agent", "host", "input", "log", "stream", "tags", "_id", "_index", "_score", "ecs", "event.original"]
    }
  }
}

output {
  elasticsearch {
    index => "logstash-${STACK_VERSION}-%{+YYYY.MM.dd}-000001"
    hosts => "${ELASTIC_HOSTS}"
    user => "${ELASTIC_USER}"
    password => "${ELASTIC_PASSWORD}"
    cacert => 'certs/ca/ca.crt'
  }
  # stdout { codec => rubydebug }
}
